// ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡πÑ‡∏ü‡∏•‡πå src/components/contact/ContactPage.js
import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';

const ContactPage = () => {
  const navigate = useNavigate();
  const [activeSection, setActiveSection] = useState('channels');
  const [expandedFaq, setExpandedFaq] = useState(null);

  // Contact channels data - ‡πÄ‡∏ô‡πâ‡∏ô LINE OA ‡πÅ‡∏•‡∏∞ Telegram
  const contactChannels = [
    {
      id: 'line-main',
      name: 'LINE Official ‡∏´‡∏•‡∏±‡∏Å',
      icon: 'üí¨',
      details: '@chokede-lottery',
      description: '‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏´‡∏•‡∏±‡∏Å‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥ - ‡∏ï‡∏≠‡∏ö‡πÄ‡∏£‡πá‡∏ß‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î',
      action: '‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô LINE ‡∏´‡∏•‡∏±‡∏Å',
      url: 'https://line.me/R/ti/p/@chokede-lottery',
      available: '24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á',
      color: 'from-green-500 to-green-600',
      priority: 'main',
      badge: '‡∏´‡∏•‡∏±‡∏Å'
    },
    {
      id: 'line-backup',
      name: 'LINE Official ‡∏™‡∏≥‡∏£‡∏≠‡∏á',
      icon: 'üí¨',
      details: '@chokede-support',
      description: '‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏™‡∏≥‡∏£‡∏≠‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏•‡∏ô‡πå‡∏´‡∏•‡∏±‡∏Å‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ',
      action: '‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô LINE ‡∏™‡∏≥‡∏£‡∏≠‡∏á',
      url: 'https://line.me/R/ti/p/@chokede-support',
      available: '24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á',
      color: 'from-green-400 to-green-500',
      priority: 'backup',
      badge: '‡∏™‡∏≥‡∏£‡∏≠‡∏á'
    },
    {
      id: 'telegram',
      name: 'Telegram',
      icon: '‚úàÔ∏è',
      details: '@chokede_support',
      description: '‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏ó‡∏≤‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠',
      action: '‡πÑ‡∏õ‡∏ó‡∏µ‡πà Telegram',
      url: 'https://t.me/chokede_support',
      available: '24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á',
      color: 'from-blue-400 to-blue-600',
      priority: 'alternative',
      badge: '‡∏ó‡∏≤‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å'
    }
  ];

  // FAQ data
  const faqData = [
    {
      id: 1,
      question: '‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏ù‡∏≤‡∏Å‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏∞‡∏ö‡∏ö',
      answer: '‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ù‡∏≤‡∏Å‡πÄ‡∏á‡∏¥‡∏ô‡∏ú‡πà‡∏≤‡∏ô‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏£‡πà‡∏ß‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ ‡πÑ‡∏î‡πâ‡πÅ‡∏Å‡πà ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û ‡∏Å‡∏™‡∏¥‡∏Å‡∏£‡πÑ‡∏ó‡∏¢ ‡πÑ‡∏ó‡∏¢‡∏û‡∏≤‡∏ì‡∏¥‡∏ä‡∏¢‡πå ‡πÅ‡∏•‡∏∞‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡πÇ‡∏î‡∏¢‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡πÅ‡∏à‡πâ‡∏á‡πÉ‡∏ô LINE Official ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏ù‡∏≤‡∏Å‡πÄ‡∏á‡∏¥‡∏ô',
      category: '‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô'
    },
    {
      id: 2,
      question: '‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ñ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô',
      answer: '‡∏Å‡∏≤‡∏£‡∏ñ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏à‡∏∞‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 5-15 ‡∏ô‡∏≤‡∏ó‡∏µ ‡πÉ‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏≥‡∏Å‡∏≤‡∏£ (8:00-22:00) ‡∏´‡∏≤‡∏Å‡∏ñ‡∏≠‡∏ô‡∏ô‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤‡∏à‡∏∞‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏ô‡πÄ‡∏ä‡πâ‡∏≤‡∏ß‡∏±‡∏ô‡∏ñ‡∏±‡∏î‡πÑ‡∏õ',
      category: '‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô'
    },
    {
      id: 3,
      question: '‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠‡∏´‡∏ß‡∏¢',
      answer: '‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏´‡∏ß‡∏¢‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ > ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏ó‡∏á > ‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô > ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠ ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏´‡∏±‡∏Å‡πÄ‡∏á‡∏¥‡∏ô‡∏à‡∏≤‡∏Å‡∏¢‡∏≠‡∏î‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ó‡∏±‡∏ô‡∏ó‡∏µ',
      category: '‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô'
    },
    {
      id: 4,
      question: '‡∏•‡∏∑‡∏°‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô',
      answer: '‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡∏ú‡πà‡∏≤‡∏ô LINE Official ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÅ‡∏ô‡∏ö‡∏£‡∏π‡∏õ‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô ‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡∏à‡∏∞‡∏ä‡πà‡∏ß‡∏¢‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÉ‡∏´‡πâ‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 30 ‡∏ô‡∏≤‡∏ó‡∏µ',
      category: '‡∏ö‡∏±‡∏ç‡∏ä‡∏µ'
    },
    {
      id: 5,
      question: '‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô (KYC)',
      answer: '‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô‡πÅ‡∏•‡∏∞‡∏£‡∏π‡∏õ‡πÄ‡∏ã‡∏•‡∏ü‡∏µ‡πà‡∏ñ‡∏∑‡∏≠‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô ‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡∏à‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á',
      category: '‡∏ö‡∏±‡∏ç‡∏ä‡∏µ'
    },
    {
      id: 6,
      question: 'LINE Official ‡πÑ‡∏°‡πà‡∏ï‡∏≠‡∏ö ‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£?',
      answer: '‡∏´‡∏≤‡∏Å‡πÑ‡∏•‡∏ô‡πå‡∏´‡∏•‡∏±‡∏Å‡πÑ‡∏°‡πà‡∏ï‡∏≠‡∏ö ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ú‡πà‡∏≤‡∏ô LINE Official ‡∏™‡∏≥‡∏£‡∏≠‡∏á ‡∏´‡∏£‡∏∑‡∏≠ Telegram ‡πÑ‡∏î‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ ‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡∏à‡∏∞‡∏î‡∏π‡πÅ‡∏•‡∏ó‡∏∏‡∏Å‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡πÄ‡∏ó‡πà‡∏≤‡πÄ‡∏ó‡∏µ‡∏¢‡∏°‡∏Å‡∏±‡∏ô',
      category: '‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠'
    }
  ];

  const containerStyle = {
    padding: '1.5rem 0',
    display: 'flex',
    flexDirection: 'column',
    gap: '1.5rem',
    animation: 'fadeIn 0.5s ease-out'
  };

  const getBadgeStyle = (priority) => {
    switch (priority) {
      case 'main':
        return {
          backgroundColor: '#dc2626',
          color: '#ffffff',
          fontSize: '0.75rem',
          fontWeight: 'bold',
          padding: '0.25rem 0.5rem',
          borderRadius: '0.25rem',
          position: 'absolute',
          top: '0.5rem',
          right: '0.5rem'
        };
      case 'backup':
        return {
          backgroundColor: '#f59e0b',
          color: '#ffffff',
          fontSize: '0.75rem',
          fontWeight: 'bold',
          padding: '0.25rem 0.5rem',
          borderRadius: '0.25rem',
          position: 'absolute',
          top: '0.5rem',
          right: '0.5rem'
        };
      case 'alternative':
        return {
          backgroundColor: '#3b82f6',
          color: '#ffffff',
          fontSize: '0.75rem',
          fontWeight: 'bold',
          padding: '0.25rem 0.5rem',
          borderRadius: '0.25rem',
          position: 'absolute',
          top: '0.5rem',
          right: '0.5rem'
        };
      default:
        return {};
    }
  };

  return (
    <>
      <style>{`
        @keyframes fadeIn {
          from { opacity: 0; transform: translateY(20px); }
          to { opacity: 1; transform: translateY(0); }
        }
        
        @keyframes pulse {
          0%, 100% { opacity: 1; }
          50% { opacity: 0.8; }
        }
        
        .contact-item:hover {
          transform: translateY(-2px);
          box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
        }
        
        .faq-item:hover {
          background-color: #f8fafc;
        }
        
        .main-channel {
          animation: pulse 2s infinite;
          border: 2px solid #10b981;
        }
      `}</style>
      
      <div style={containerStyle}>
        {/* Header */}
        <div style={{
          background: 'linear-gradient(135deg, #10b981, #059669)',
          borderRadius: '1.5rem',
          padding: '1.5rem',
          color: '#ffffff',
          textAlign: 'center',
          boxShadow: '0 8px 32px rgba(16, 185, 129, 0.3)'
        }}>
          <div style={{ fontSize: '2.5rem', marginBottom: '0.5rem' }}>üí¨</div>
          <h1 style={{ fontSize: '1.5rem', fontWeight: 'bold', margin: 0, marginBottom: '0.5rem' }}>
            ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏£‡∏≤
          </h1>
          <p style={{ margin: 0, opacity: 0.9 }}>
            ‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ï‡∏•‡∏≠‡∏î 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á
          </p>
        </div>

        {/* Navigation Tabs */}
        <div style={{
          display: 'flex',
          backgroundColor: '#ffffff',
          borderRadius: '1rem',
          border: '1px solid #e5e7eb',
          overflow: 'hidden',
          boxShadow: '0 4px 6px rgba(0, 0, 0, 0.05)'
        }}>
          <button
            onClick={() => setActiveSection('channels')}
            style={{
              flex: 1,
              padding: '0.75rem',
              fontWeight: 'bold',
              border: 'none',
              cursor: 'pointer',
              backgroundColor: activeSection === 'channels' ? '#10b981' : 'transparent',
              color: activeSection === 'channels' ? '#ffffff' : '#6b7280',
              transition: 'all 0.3s ease'
            }}
          >
            üìû ‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠
          </button>
          <button
            onClick={() => setActiveSection('faq')}
            style={{
              flex: 1,
              padding: '0.75rem',
              fontWeight: 'bold',
              border: 'none',
              cursor: 'pointer',
              backgroundColor: activeSection === 'faq' ? '#10b981' : 'transparent',
              color: activeSection === 'faq' ? '#ffffff' : '#6b7280',
              transition: 'all 0.3s ease'
            }}
          >
            ‚ùì FAQ
          </button>
        </div>

        {/* Contact Channels */}
        {activeSection === 'channels' && (
          <div style={{ display: 'flex', flexDirection: 'column', gap: '1rem' }}>
            {/* ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥ */}
            <div style={{
              backgroundColor: '#eff6ff',
              border: '1px solid #bfdbfe',
              borderRadius: '1rem',
              padding: '1rem',
              textAlign: 'center'
            }}>
              <h3 style={{ 
                fontSize: '1rem', 
                fontWeight: 'bold', 
                color: '#1e40af',
                margin: '0 0 0.5rem 0' 
              }}>
                üí° ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥
              </h3>
              <p style={{ 
                fontSize: '0.875rem', 
                color: '#1e40af', 
                margin: 0,
                lineHeight: 1.5 
              }}>
                ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ <strong>LINE Official ‡∏´‡∏•‡∏±‡∏Å</strong> ‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö‡πÅ‡∏£‡∏Å<br/>
                ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÑ‡∏î‡πâ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ <strong>LINE ‡∏™‡∏≥‡∏£‡∏≠‡∏á</strong> ‡∏´‡∏£‡∏∑‡∏≠ <strong>Telegram</strong>
              </p>
            </div>

            {contactChannels.map(channel => (
              <div
                key={channel.id}
                style={{
                  backgroundColor: '#ffffff',
                  borderRadius: '1rem',
                  padding: '1.5rem',
                  border: channel.priority === 'main' ? '2px solid #10b981' : '1px solid #e5e7eb',
                  boxShadow: channel.priority === 'main' 
                    ? '0 8px 25px rgba(16, 185, 129, 0.2)' 
                    : '0 4px 6px rgba(0, 0, 0, 0.05)',
                  transition: 'all 0.3s ease',
                  position: 'relative'
                }}
                className={`contact-item ${channel.priority === 'main' ? 'main-channel' : ''}`}
              >
                {/* Badge */}
                <div style={getBadgeStyle(channel.priority)}>
                  {channel.badge}
                </div>

                <div style={{ display: 'flex', alignItems: 'center', gap: '1rem', marginBottom: '1rem' }}>
                  <div style={{
                    width: '3rem',
                    height: '3rem',
                    background: `linear-gradient(135deg, ${channel.color.replace('from-', '').replace(' to-', ', ')})`,
                    borderRadius: '0.75rem',
                    display: 'flex',
                    alignItems: 'center',
                    justifyContent: 'center',
                    fontSize: '1.25rem'
                  }}>
                    {channel.icon}
                  </div>
                  <div style={{ flex: 1, paddingRight: '3rem' }}>
                    <h3 style={{ fontSize: '1.125rem', fontWeight: 'bold', margin: 0, color: '#1f2937' }}>
                      {channel.name}
                    </h3>
                    <p style={{ margin: '0.25rem 0 0 0', color: '#6b7280', fontSize: '0.875rem' }}>
                      {channel.description}
                    </p>
                  </div>
                </div>

                <div style={{ marginBottom: '1rem' }}>
                  <div style={{ fontWeight: 'bold', color: '#1f2937', marginBottom: '0.25rem' }}>
                    {channel.details}
                  </div>
                  <div style={{ fontSize: '0.875rem', color: '#10b981', fontWeight: '600' }}>
                    ‚è∞ {channel.available}
                  </div>
                </div>

                <button
                  onClick={() => window.open(channel.url, '_blank')}
                  style={{
                    width: '100%',
                    background: `linear-gradient(135deg, ${channel.color.replace('from-', '').replace(' to-', ', ')})`,
                    color: '#ffffff',
                    padding: channel.priority === 'main' ? '1rem' : '0.75rem',
                    borderRadius: '0.5rem',
                    fontWeight: 'bold',
                    border: 'none',
                    cursor: 'pointer',
                    fontSize: channel.priority === 'main' ? '1.125rem' : '1rem',
                    transition: 'transform 0.2s ease',
                    boxShadow: '0 4px 12px rgba(0, 0, 0, 0.15)'
                  }}
                  onMouseOver={(e) => e.target.style.transform = 'translateY(-1px)'}
                  onMouseOut={(e) => e.target.style.transform = 'translateY(0)'}
                >
                  {channel.action}
                </button>
              </div>
            ))}
          </div>
        )}

        {/* FAQ Section */}
        {activeSection === 'faq' && (
          <div style={{
            backgroundColor: '#ffffff',
            borderRadius: '1rem',
            padding: '1.5rem',
            border: '1px solid #e5e7eb',
            boxShadow: '0 4px 6px rgba(0, 0, 0, 0.05)'
          }}>
            <h2 style={{ fontSize: '1.25rem', fontWeight: 'bold', marginBottom: '1rem', color: '#1f2937' }}>
              ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏û‡∏ö‡∏ö‡πà‡∏≠‡∏¢ (FAQ)
            </h2>
            
            <div style={{ display: 'flex', flexDirection: 'column', gap: '0.5rem' }}>
              {faqData.map(faq => (
                <div
                  key={faq.id}
                  style={{
                    border: '1px solid #e5e7eb',
                    borderRadius: '0.5rem',
                    overflow: 'hidden',
                    transition: 'all 0.2s ease'
                  }}
                  className="faq-item"
                >
                  <button
                    onClick={() => setExpandedFaq(expandedFaq === faq.id ? null : faq.id)}
                    style={{
                      width: '100%',
                      padding: '1rem',
                      textAlign: 'left',
                      backgroundColor: expandedFaq === faq.id ? '#f3f4f6' : '#ffffff',
                      border: 'none',
                      cursor: 'pointer',
                      display: 'flex',
                      justifyContent: 'space-between',
                      alignItems: 'center',
                      transition: 'background-color 0.2s'
                    }}
                  >
                    <div>
                      <div style={{ fontWeight: 'bold', color: '#1f2937', marginBottom: '0.25rem' }}>
                        {faq.question}
                      </div>
                      <div style={{ fontSize: '0.875rem', color: '#6b7280' }}>
                        {faq.category}
                      </div>
                    </div>
                    <div style={{
                      transform: expandedFaq === faq.id ? 'rotate(180deg)' : 'rotate(0deg)',
                      transition: 'transform 0.2s',
                      fontSize: '1.25rem',
                      color: '#6b7280'
                    }}>
                      ‚ñº
                    </div>
                  </button>
                  
                  {expandedFaq === faq.id && (
                    <div style={{
                      padding: '1rem',
                      backgroundColor: '#f9fafb',
                      borderTop: '1px solid #e5e7eb',
                      animation: 'fadeIn 0.3s ease-out'
                    }}>
                      <p style={{ margin: 0, color: '#374151', lineHeight: 1.6 }}>
                        {faq.answer}
                      </p>
                    </div>
                  )}
                </div>
              ))}
            </div>
          </div>
        )}

        {/* Quick Actions - ‡πÄ‡∏ô‡πâ‡∏ô LINE ‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏•‡∏±‡∏Å */}
        <div style={{
          backgroundColor: '#ffffff',
          borderRadius: '1rem',
          padding: '1.5rem',
          border: '1px solid #e5e7eb',
          boxShadow: '0 4px 6px rgba(0, 0, 0, 0.05)'
        }}>
          <h3 style={{ fontSize: '1.125rem', fontWeight: 'bold', marginBottom: '1rem', color: '#1f2937' }}>
            üì± ‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏î‡πà‡∏ß‡∏ô
          </h3>
          <div style={{ display: 'flex', flexDirection: 'column', gap: '0.75rem' }}>
            {/* LINE Official ‡∏´‡∏•‡∏±‡∏Å */}
            <button
              onClick={() => window.open('https://line.me/R/ti/p/@chokede-lottery', '_blank')}
              style={{
                background: 'linear-gradient(135deg, #00b900, #00a000)',
                color: '#ffffff',
                padding: '1rem',
                borderRadius: '0.5rem',
                border: 'none',
                cursor: 'pointer',
                fontWeight: 'bold',
                fontSize: '1rem',
                transition: 'transform 0.2s',
                boxShadow: '0 4px 12px rgba(0, 185, 0, 0.3)'
              }}
              onMouseOver={(e) => e.target.style.transform = 'translateY(-1px)'}
              onMouseOut={(e) => e.target.style.transform = 'translateY(0)'}
            >
              üí¨ LINE Official ‡∏´‡∏•‡∏±‡∏Å (‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥)
            </button>
            
            {/* ‡∏õ‡∏∏‡πà‡∏°‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏™‡∏≥‡∏£‡∏≠‡∏á */}
            <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '0.75rem' }}>
              <button
                onClick={() => window.open('https://line.me/R/ti/p/@chokede-support', '_blank')}
                style={{
                  background: 'linear-gradient(135deg, #22c55e, #16a34a)',
                  color: '#ffffff',
                  padding: '0.75rem',
                  borderRadius: '0.5rem',
                  border: 'none',
                  cursor: 'pointer',
                  fontWeight: 'bold',
                  fontSize: '0.875rem',
                  transition: 'transform 0.2s'
                }}
                onMouseOver={(e) => e.target.style.transform = 'translateY(-1px)'}
                onMouseOut={(e) => e.target.style.transform = 'translateY(0)'}
              >
                üí¨ LINE ‡∏™‡∏≥‡∏£‡∏≠‡∏á
              </button>
              <button
                onClick={() => window.open('https://t.me/chokede_support', '_blank')}
                style={{
                  background: 'linear-gradient(135deg, #3b82f6, #2563eb)',
                  color: '#ffffff',
                  padding: '0.75rem',
                  borderRadius: '0.5rem',
                  border: 'none',
                  cursor: 'pointer',
                  fontWeight: 'bold',
                  fontSize: '0.875rem',
                  transition: 'transform 0.2s'
                }}
                onMouseOver={(e) => e.target.style.transform = 'translateY(-1px)'}
                onMouseOut={(e) => e.target.style.transform = 'translateY(0)'}
              >
                ‚úàÔ∏è Telegram
              </button>
            </div>
          </div>
        </div>

        {/* ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏û‡∏¥‡πÄ‡∏®‡∏© */}
        <div style={{
          backgroundColor: '#fef3c7',
          border: '1px solid #f59e0b',
          borderRadius: '1rem',
          padding: '1rem',
          textAlign: 'center'
        }}>
          <h4 style={{ 
            fontSize: '1rem', 
            fontWeight: 'bold', 
            color: '#92400e',
            margin: '0 0 0.5rem 0' 
          }}>
            ‚ö†Ô∏è ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç
          </h4>
          <p style={{ 
            fontSize: '0.875rem', 
            color: '#92400e', 
            margin: 0,
            lineHeight: 1.5 
          }}>
            ‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Ç‡∏≠‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡∏ú‡πà‡∏≤‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡πÉ‡∏î‡πÜ<br/>
            ‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏ú‡∏π‡πâ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏°‡∏≤‡∏Ç‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏î‡∏±‡∏á‡∏Å‡∏•‡πà‡∏≤‡∏ß ‡πÇ‡∏õ‡∏£‡∏î‡∏≠‡∏¢‡πà‡∏≤‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡πÅ‡∏à‡πâ‡∏á‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
          </p>
        </div>
      </div>
    </>
  );
};

export default ContactPage;